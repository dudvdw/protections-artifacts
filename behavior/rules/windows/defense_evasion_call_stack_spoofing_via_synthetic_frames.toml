[rule]
description = """
Detects Windows Memory API calls within a potentially altered call stack in order to conceal the true source of the
call.
"""
id = "d8c57cb7-bab6-41fa-9063-dcc8793c3955"
license = "Elastic License v2"
name = "Call Stack Spoofing via Synthetic Frames"
os_list = ["windows"]
reference = ["https://www.elastic.co/security-labs/doubling-down-etw-callstacks"]
version = "1.0.20"

query = '''
any where 
(
 (event.category : "api" and
  not process.Ext.api.name : ("IoCreateDevice", "Wow64SuspendThread", "ReadProcessMemory", "SuspendThread", "connect")) or
 (event.category : "library" and dll.name : ("ws2_32.dll", "winhttp.dll", "wininet.dll"))
 ) and 

 process.thread.Ext.call_stack_summary : "ntdll.dll|kernel32.dll*" and 
 
  /* JMP gadget in kernel32 */
  _arraysearch(process.thread.Ext.call_stack, $entry, $entry.symbol_info regex~ """.*system32\\kernel32.dll!(A|[C-Z]).+""") and 
   not process.thread.Ext.call_stack_final_user_module.name : "Kernel" and
   not process.thread.Ext.call_stack_summary : "ntdll.dll|kernel32.dll|mso40uiwin32client.dll|mso98win32client.dll|mso.dll|*" and
   not  _arraysearch(process.thread.Ext.call_stack, $entry, 
                   $entry.symbol_info : ("*kernel32.dll!CreateProcess*", "*kernel32.dll!GetDateFormatWWorker*", 
                                         "*kernel32.dll!WerpLaunchAeDebug*", "*kernel32.dll!BaseDllReadWriteIniFile*", 
                                         "*kernel32.dll!GlobalReAlloc*", "*kernel32.dll!CreateToolhelp32Snapshot*", 
                                         "*kernel32.dll!Wow64SetThreadContext*", "*kernel32.dll!ExitProcess*", "*kernel32.dll!WinExec*",
                                         "*kernel32.dll!CallbackMayRunLong*", "*kernel32.dll!BaseGenerateAppCompatData*", 
                                         "*mpclient.dll!MpUpdateServicePingRpc*", "*chrome.exe!IsSandboxedProcess*",
                                         "*kernel32.dll!CreateActCtxWWorker*", "*kernel32.dll!Sleep*",
                                         "*kernel32.dll!BasepCheckAppCompat*", "*kernel32.dll!AddAtomW*",
                                         "*\\kernel32.dll!lstrlenW*", "*\\kernel32.dll!FindActCtxSectionGuidWorker*",
                                         "*\\kernel32.dll!OpenPrivateNamespaceW*", "*\\kernel32.dll!DeactivateActCtxWorke*",
                                         "c:\\windows\\system32\\kernel32.dll!QuirkIsEnabled3Worker*")) and
   not process.thread.Ext.call_stack_final_user_module.hash.sha256 in
                                          ("a18cf3049c015dbc6a145a92dd2fe791abc95130c668cffab4a153076fac619f",
                                           "d9adb2a675996b3c4b989878d933aea86cfc7846c4fbcee8dcee576b5b0945de",
                                           "e663cd268b7d966c3bde07dbbc81e76f522c9d48089aceeba550c6ebe076942e",
                                           "2528d1f6cd08474df88ac5bbbaf0ff46ad8592757951a8823eb30a79e68bec28",
                                           "d962d6d77c2bd492cbbc01852d92d1a785a64dde7c302b4ce1c4c8abe6a8c03a")
'''

min_endpoint_version = "8.10.0"
optional_actions = []
[[actions]]
action = "kill_process"
field = "process.entity_id"
state = 0

[[threat]]
framework = "MITRE ATT&CK"
[[threat.technique]]
id = "T1036"
name = "Masquerading"
reference = "https://attack.mitre.org/techniques/T1036/"

[[threat.technique]]
id = "T1055"
name = "Process Injection"
reference = "https://attack.mitre.org/techniques/T1055/"


[threat.tactic]
id = "TA0005"
name = "Defense Evasion"
reference = "https://attack.mitre.org/tactics/TA0005/"

[internal]
min_endpoint_version = "8.10.0"
