[rule]
description = """
Detects network connections originating from Python, followed by a file creation event without a file extension. This
behavior is consistent with Python-based agents such as Medusa connecting to a C2 framework such as Mythic. The agent
polls the C2 for commands through a web request, after which the command gets executed.
"""
id = "1a2596ff-a5e7-4562-af17-97dbaf9284d5"
license = "Elastic License v2"
name = "Python Network Connection Followed by File Creation"
os_list = ["linux"]
version = "1.0.11"

query = '''
sequence by process.entity_id with maxspan=5s
  [network where event.type == "start" and event.action == "connection_attempted" and
   process.executable like ("/usr/bin/python*", "/bin/python*") and not (
     destination.ip == null or destination.ip == "0.0.0.0" or cidrmatch(
       destination.ip, "10.0.0.0/8", "127.0.0.0/8", "169.254.0.0/16", "172.16.0.0/12", "192.0.0.0/24", "192.0.0.0/29",
       "192.0.0.8/32", "192.0.0.9/32", "192.0.0.10/32", "192.0.0.170/32", "192.0.0.171/32", "192.0.2.0/24",
       "192.31.196.0/24", "192.52.193.0/24", "192.168.0.0/16", "192.88.99.0/24", "224.0.0.0/4", "100.64.0.0/10",
       "192.175.48.0/24","198.18.0.0/15", "198.51.100.0/24", "203.0.113.0/24", "240.0.0.0/4", "::1", "FE80::/10",
       "FF00::/8"
    )
   )
  ]
  [file where event.type == "creation" and event.action == "creation" and file.extension == null and not (
     process.executable in ("/etc/cron.daily/0yum-daily.cron", "/tmp/trivy") or
     file.name like ("tmp*", "*;*", "METADATA", "LICENSE") or
     file.path like (
       "/home/*", "/tmp/*", "/var/tmp/*", "/var/*", "/opt/*", "/etc/*", "/app*", "/run/*", "/root/*", "/nss/*",
       "/dev/shm/sem.*", "/usr/lib/python*", "/config/*", "/builds/*", "/usr/local/*", "/reports/*", "/mnt/*",
       "/srv/*", "/export/*", "/dev/shm/kcsig-key-*", "/usr/lib/systemd/system/*", "/lib/systemd/system/*", 
       "/vertex/storage/*", "/usr/lib/check_mk_agent/*", "/usr/bin/*", "/usr/lib64/*", "/repo/python/*",
       "/dev/ptmx", "/data/smoke*KEYS", "/workspaces/*", "/dev/shm/pym-*", "/dev/shm/kcsig-data*",
       "*/.local/lib/python*/site-packages/*"
     ) or
     file.path regex~ """/dev/shm/[a-zA-Z0-9]{6}""" or
     file.path regex~ """/dev/shm/nccl\-[a-zA-Z0-9]{6}""" or
     file.path regex~ """/dev/shm/pym\-[0-9]{5}\-[a-z0-9]{8}"""
    )
  ]
'''

min_endpoint_version = "7.15.0"
optional_actions = []
[[actions]]
action = "kill_process"
field = "process.entity_id"
state = 0

[[threat]]
framework = "MITRE ATT&CK"
[[threat.technique]]
id = "T1059"
name = "Command and Scripting Interpreter"
reference = "https://attack.mitre.org/techniques/T1059/"
[[threat.technique.subtechnique]]
id = "T1059.004"
name = "Unix Shell"
reference = "https://attack.mitre.org/techniques/T1059/004/"

[[threat.technique.subtechnique]]
id = "T1059.006"
name = "Python"
reference = "https://attack.mitre.org/techniques/T1059/006/"



[threat.tactic]
id = "TA0002"
name = "Execution"
reference = "https://attack.mitre.org/tactics/TA0002/"
[[threat]]
framework = "MITRE ATT&CK"
[[threat.technique]]
id = "T1071"
name = "Application Layer Protocol"
reference = "https://attack.mitre.org/techniques/T1071/"
[[threat.technique.subtechnique]]
id = "T1071.001"
name = "Web Protocols"
reference = "https://attack.mitre.org/techniques/T1071/001/"



[threat.tactic]
id = "TA0011"
name = "Command and Control"
reference = "https://attack.mitre.org/tactics/TA0011/"

[internal]
min_endpoint_version = "7.15.0"
